From 5d4ac272c7ee88f44fa509e8fa2bc6def003a7f6 Mon Sep 17 00:00:00 2001
From: Trevor Norris <trev.norris@gmail.com>
Date: Tue, 11 Jun 2013 14:39:25 -0700
Subject: [PATCH] v8: fix pointer arithmetic undefined behavior

Clang branch release_33 would optimize out a != NULL check because of
some undefined behavior. This is a floating patch as a backport of that
fix.

Committed: http://code.google.com/p/v8/source/detail?r=13570
---
 deps/v8/src/spaces.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/spaces.h b/src/spaces.h
index 95c63d6..c8ccc7b 100644
--- a/src/spaces.h
+++ b/src/spaces.h
@@ -320,7 +320,8 @@ class MemoryChunk {
   Space* owner() const {
     if ((reinterpret_cast<intptr_t>(owner_) & kFailureTagMask) ==
         kFailureTag) {
-      return reinterpret_cast<Space*>(owner_ - kFailureTag);
+      return reinterpret_cast<Space*>(reinterpret_cast<intptr_t>(owner_) -
+                                      kFailureTag);
     } else {
       return NULL;
     }
-- 
1.8.4

